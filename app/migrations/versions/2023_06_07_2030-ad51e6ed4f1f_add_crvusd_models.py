"""Add crvusd models

Revision ID: ad51e6ed4f1f
Revises: b68dfb7815be
Create Date: 2023-06-07 20:30:21.803600

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ad51e6ed4f1f"
down_revision = "b68dfb7815be"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "amm",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("marketId", sa.String(), nullable=True),
        sa.Column("coins", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("coinNames", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("basePrice", sa.Float(), nullable=True),
        sa.Column("totalSwapVolume", sa.Float(), nullable=True),
        sa.Column("totalDepositVolume", sa.Float(), nullable=True),
        sa.Column("totalVolume", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "monetaryPolicy",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("market", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "debtFraction",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("policyId", sa.String(), nullable=True),
        sa.Column("target", sa.Numeric(), nullable=True),
        sa.Column("blockNumber", sa.Numeric(), nullable=True),
        sa.Column("blockTimestamp", sa.Numeric(), nullable=True),
        sa.Column("transactionHash", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["policyId"],
            ["monetaryPolicy.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "market",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("collateral", sa.String(), nullable=True),
        sa.Column("collateralName", sa.String(), nullable=True),
        sa.Column("collateralPrecision", sa.Integer(), nullable=True),
        sa.Column("controller", sa.String(), nullable=True),
        sa.Column("amm", sa.String(), nullable=True),
        sa.Column("monetaryPolicy", sa.String(), nullable=True),
        sa.Column("index", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["amm"],
            ["amm.id"],
        ),
        sa.ForeignKeyConstraint(
            ["monetaryPolicy"],
            ["monetaryPolicy.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "pegKeeper",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("policyId", sa.String(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("debt", sa.Numeric(), nullable=True),
        sa.Column("totalProvided", sa.Numeric(), nullable=True),
        sa.Column("totalWithdrawn", sa.Numeric(), nullable=True),
        sa.Column("totalProfit", sa.Numeric(), nullable=True),
        sa.ForeignKeyConstraint(
            ["policyId"],
            ["monetaryPolicy.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "volumeSnapshot",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("ammId", sa.String(), nullable=True),
        sa.Column("swapVolumeUsd", sa.Numeric(), nullable=True),
        sa.Column("depositVolumeUsd", sa.Numeric(), nullable=True),
        sa.Column("totalVolumeUsd", sa.Numeric(), nullable=True),
        sa.Column("count", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ammId"],
            ["amm.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "liquidation",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user", sa.String(), nullable=True),
        sa.Column("liquidator", sa.String(), nullable=True),
        sa.Column("marketId", sa.String(), nullable=True),
        sa.Column("collateralReceived", sa.Numeric(), nullable=True),
        sa.Column("stablecoinReceived", sa.Numeric(), nullable=True),
        sa.Column("debt", sa.Numeric(), nullable=True),
        sa.Column("blockNumber", sa.Numeric(), nullable=True),
        sa.Column("blockTimestamp", sa.Numeric(), nullable=True),
        sa.Column("transactionHash", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["marketId"],
            ["market.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "snapshot",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("marketId", sa.String(), nullable=True),
        sa.Column("llammaId", sa.String(), nullable=True),
        sa.Column("policyId", sa.String(), nullable=True),
        sa.Column("A", sa.Integer(), nullable=True),
        sa.Column("rate", sa.Numeric(), nullable=True),
        sa.Column("futureRate", sa.Numeric(), nullable=True),
        sa.Column("liquidationDiscount", sa.Numeric(), nullable=True),
        sa.Column("loanDiscount", sa.Numeric(), nullable=True),
        sa.Column("minted", sa.Numeric(), nullable=True),
        sa.Column("redeemed", sa.Numeric(), nullable=True),
        sa.Column("totalKeeperDebt", sa.Numeric(), nullable=True),
        sa.Column("totalCollateral", sa.Numeric(), nullable=True),
        sa.Column("totalCollateralUsd", sa.Numeric(), nullable=True),
        sa.Column("totalSupply", sa.Numeric(), nullable=True),
        sa.Column("totalStableCoin", sa.Numeric(), nullable=True),
        sa.Column("totalDebt", sa.Numeric(), nullable=True),
        sa.Column("nLoans", sa.Integer(), nullable=True),
        sa.Column("crvUsdAdminFees", sa.Numeric(), nullable=True),
        sa.Column("collateralAdminFees", sa.Numeric(), nullable=True),
        sa.Column("fee", sa.Numeric(), nullable=True),
        sa.Column("adminFee", sa.Numeric(), nullable=True),
        sa.Column("ammPrice", sa.Numeric(), nullable=True),
        sa.Column("oraclePrice", sa.Numeric(), nullable=True),
        sa.Column("basePrice", sa.Numeric(), nullable=True),
        sa.Column("activeBand", sa.Integer(), nullable=True),
        sa.Column("minBand", sa.Integer(), nullable=True),
        sa.Column("maxBand", sa.Integer(), nullable=True),
        sa.Column("bandSnapshot", sa.Boolean(), nullable=True),
        sa.Column("blockNumber", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["llammaId"],
            ["amm.id"],
        ),
        sa.ForeignKeyConstraint(
            ["marketId"],
            ["market.id"],
        ),
        sa.ForeignKeyConstraint(
            ["policyId"],
            ["monetaryPolicy.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("snapshot")
    op.drop_table("liquidation")
    op.drop_table("volumeSnapshot")
    op.drop_table("pegKeeper")
    op.drop_table("market")
    op.drop_table("debtFraction")
    op.drop_table("monetaryPolicy")
    op.drop_table("amm")
    # ### end Alembic commands ###
