version: "3.7"
services:
  nginx:
    build:
      context: ./nginx
      args:
        DOMAIN: ${DOMAIN}
        EMAIL: ${EMAIL}
        FLASK: web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    env_file:
      - .env
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: always
    command: gunicorn --bind 0.0.0.0:5000 app:app
    depends_on:
      - redis
    volumes: ['./app:/app']
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
      CACHE_REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    env_file:
      - .env
  worker:
    build:
      context: ./app
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel INFO -E
    depends_on:
      - redis
    volumes: ['./app:/app']
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
  scheduler:
    build:
      context: ./app
      dockerfile: Dockerfile
    command: celery -A app.celery beat
    depends_on:
      - redis
    volumes: ['./app:/app']
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
  monitor:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    command: celery -A app.celery flower
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - redis
      - worker
    volumes: ['./app:/app']
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
